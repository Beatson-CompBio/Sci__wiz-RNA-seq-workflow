name: ScI Wizard Build and Release

on:
  pull_request:
    branches:
      - Prod
  # push:
  #   branches:
  #     - Prod
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, linux, x64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
            python-version: 3.11
      - name: Install Poetry
        run: |
            python -m pip install --upgrade pip
            pip install poetry
      - name: Install dependencies using Poetry
        run: poetry install
      - name: Lint code using flake8
        run: |
            poetry run black .
            poetry run flake8 --ignore=E501,F401,E203,F841,W503,W605 .
      - name: Run unit tests using pytest
        run: poetry run pytest tests/ --cov=sci_wiz --cov-report html
      - name: build wheel
        run: poetry build
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: |
            dist/*
            htmlcov

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
            python-version: 3.11
      - name: Install Poetry
        run: |
            python -m pip install --upgrade pip
            pip install poetry
      - name: Install dependencies using Poetry
        run: |
            poetry config virtualenvs.create false
            poetry install
      - name: Python Semantic Release
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "action@github.com"
          semantic-release version
          semantic-release publish
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
